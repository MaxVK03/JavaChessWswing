package javadevclassobj;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Max
 */
public class ChangePlayerName extends javax.swing.JFrame
{
    //declares new MyDBManager named db for Player Name class
    private MyDBManager db = new MyDBManager(); 
    //gets all player data through the db manager
    private ArrayList<PlayerData> PData = db.getAllPlayerData(); 
    //Declares P1 Name variable
    public String GameStateP1Name;
    //Declares the P2 Name variable
    public String GameStateP2Name;
    //Declares the GameMin Variable
    public int GameMin;
    //Declares the GameSec Variable
    public int GameSec;
    //Declrares the selected p1 variable
    private PlayerData SelectedP1 = null;
    //Declares the selected p2 variable
    private PlayerData SelectedP2 = null;

    /**
     * Creates new form ChangePlayerName
     */
    public ChangePlayerName()
    {
        initComponents();
        //sets the specified background colour that is alligned to the sprites
        getContentPane().setBackground(new java.awt.Color(117, 117, 117)); 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_ConfirmName = new javax.swing.JButton();
        txt_GameTimeMinutes = new javax.swing.JTextField();
        txt_GameTimeSeconds = new javax.swing.JTextField();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        btn_homeFromName = new javax.swing.JButton();
        btn_SetGameState = new javax.swing.JButton();
        Player1Name = new javax.swing.JComboBox<>();
        Player2Name = new javax.swing.JComboBox<>();

        btn_ConfirmName.setFont(new java.awt.Font("Comic Sans MS", 0, 10)); // NOI18N
        btn_ConfirmName.setText("Confirm Names");
        btn_ConfirmName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConfirmNameActionPerformed(evt);
            }
        });

        txt_GameTimeMinutes.setFont(new java.awt.Font("Comic Sans MS", 0, 10)); // NOI18N
        txt_GameTimeMinutes.setText("Enter Game minutes");

        txt_GameTimeSeconds.setFont(new java.awt.Font("Comic Sans MS", 0, 10)); // NOI18N
        txt_GameTimeSeconds.setText("Enter Game seconds");
        txt_GameTimeSeconds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_GameTimeSecondsActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setText("Change Player Name");

        btn_homeFromName.setFont(new java.awt.Font("Comic Sans MS", 0, 10)); // NOI18N
        btn_homeFromName.setText("Return Home");
        btn_homeFromName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeFromNameActionPerformed(evt);
            }
        });

        btn_SetGameState.setText("Set Game State");
        btn_SetGameState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SetGameStateActionPerformed(evt);
            }
        });

        Player1Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player1NameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_SetGameState, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Player1Name, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Player2Name, javax.swing.GroupLayout.Alignment.LEADING, 0, 139, Short.MAX_VALUE)
                            .addComponent(btn_homeFromName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(Player1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(Player2Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_SetGameState)
                .addGap(18, 18, 18)
                .addComponent(btn_homeFromName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ConfirmNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btn_ConfirmNameActionPerformed
    {//GEN-HEADEREND:event_btn_ConfirmNameActionPerformed
       
        
        
    }//GEN-LAST:event_btn_ConfirmNameActionPerformed

    private void txt_GameTimeSecondsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_GameTimeSecondsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_GameTimeSecondsActionPerformed

    private void btn_homeFromNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeFromNameActionPerformed
        //new Home Screen JFrame
        new HomeScreen().setVisible(true);
        //Closes the current JFrame
        this.dispose();
    }//GEN-LAST:event_btn_homeFromNameActionPerformed

    private void Player1NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player1NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Player1NameActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //for loop that loops the extent of PData
        for (int i = 0; i < PData.size(); i++) 
            {
                 // gets playerData at position i
                PlayerData p = PData.get(i);
                //adds the playerData at position i's name into the combo box   
                Player1Name.addItem(p.getPlayerName()); 
            }
        //for loop that loops the extent of PData
        for (int i = 0; i < PData.size(); i++) 
            {
                // gets playerData at position i
                PlayerData p = PData.get(i); 
                //adds the playerData at position i's name into the combo box 
                Player2Name.addItem(p.getPlayerName());   
            }
        
    }//GEN-LAST:event_formWindowOpened

    private void btn_SetGameStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SetGameStateActionPerformed
         //All actions here are performed when button is clicked
        boolean AllowGame = false; //Boolean to check that all conditions are met
        //before opening a new game
         //Checks to make sure that two of the same player is not selected
        if (Player1Name.getSelectedIndex() == Player2Name.getSelectedIndex()) 
        {
            //Outputs the appropriate error message
            JOptionPane.showMessageDialog(this, "Two separate players required"); 
        }
        else //Action performed if different players selected
        {
            //Gets the selected players name
            GameStateP1Name = PData.get(Player1Name.getSelectedIndex()).getPlayerName(); 
            //Gets the selected player
            GameStateP2Name = PData.get(Player2Name.getSelectedIndex()).getPlayerName(); 
            //Declares a variable to store the P1 player
            SelectedP1 = PData.get(Player1Name.getSelectedIndex());
            //declares a variable to store the P2 player
            SelectedP2 = PData.get(Player2Name.getSelectedIndex());
            AllowGame = true;
        }
        /* All this code was an attempt at a timer
        int min = 0; //Declares the min variable
        int sec = 0; //Declares the sec variable
        //gets the min value
        //min = (Integer)spinMinutes.getValue(); 
        //gets the second value
        //sec = (Integer)SpinSeconds.getValue();
        
        System.out.println(min);
        System.out.println(sec);
        
        if (((min == 0 && sec > 0)) || (min > 0 && sec == 0))
        {
            GameMin = min;
            GameSec = sec;
            AllowGame = true;
            
        }
        else if (min > 0 && sec > 0) 
        {
            GameMin = min;
            GameSec = sec;
            AllowGame = true;
        }
        else
        {
            //Outputs the appropriate error message
            JOptionPane.showMessageDialog(this, "Total Time must be above 0"); 
            //sets allow game to false
            AllowGame = false;
        }
        */
        //Occurs if game passes all checks
        if (AllowGame) 
        {
        //New Main Screen taking in parameters
        new MainScrn(GameStateP1Name, GameStateP2Name,SelectedP1,SelectedP2 ).setVisible(true);
        //Closes this screen
        this.dispose();
        }
        
        
    }//GEN-LAST:event_btn_SetGameStateActionPerformed
    
    public String getGameStateP2Name()
    {
        //Allows accses of p2 name
        return GameStateP2Name;
    }    
    public String getGameStateP1Name()
    {
      //Allows accsess of p1 name
       return GameStateP1Name; 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePlayerName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePlayerName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePlayerName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePlayerName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                //Runs the JFrame
                new ChangePlayerName().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Player1Name;
    private javax.swing.JComboBox<String> Player2Name;
    private javax.swing.JButton btn_ConfirmName;
    private javax.swing.JButton btn_SetGameState;
    private javax.swing.JButton btn_homeFromName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextField txt_GameTimeMinutes;
    private javax.swing.JTextField txt_GameTimeSeconds;
    // End of variables declaration//GEN-END:variables
}
