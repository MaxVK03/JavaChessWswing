package javadevclassobj;

//imports 
import java.util.ArrayList; 
import java.util.Scanner;
import javax.swing.JOptionPane;
//end of imports
/**
 *
 * @author Max
 */
//sets the class player stats to extend itself to a JFrame
public class PlayerStats extends javax.swing.JFrame 
{
    //declares new MyDBManager named db for PlayerStats class
    private MyDBManager db = new MyDBManager(); 
     //gets all player data through the db manager
    private ArrayList<PlayerData> PData = db.getAllPlayerData();
    //declares a variable to keep track of a selected player
    private PlayerData selected = null;
    /**
     * Creates new form PlayerStats
     */
    public PlayerStats() //constructor of PlayerStatsClass
    {
        initComponents();
        //used to change the background colour of the associated JFrame/Panel
        getContentPane().setBackground(new java.awt.Color(117, 117, 117)); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        textPane_PlayerData = new javax.swing.JTextPane();
        btn_UpdatePlayerWLD = new javax.swing.JButton();
        txt_StatsUpdate = new javax.swing.JTextField();
        cmbBox_SelectUpdateType = new javax.swing.JComboBox<>();
        btn_ShowPlayerInfo = new javax.swing.JButton();
        CmbBox_SelectViewPlayer = new javax.swing.JComboBox<>();
        chkBox_ShowPlayerGames = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        btn_ReturnToMainPlayerStats = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jTextPane1);

        jCheckBox1.setText("jCheckBox1");

        jCheckBox2.setText("jCheckBox2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jScrollPane2.setViewportView(textPane_PlayerData);

        btn_UpdatePlayerWLD.setText("Update Player WLD");
        btn_UpdatePlayerWLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdatePlayerWLDActionPerformed(evt);
            }
        });

        txt_StatsUpdate.setText("Stats in format W-L-D");
        txt_StatsUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_StatsUpdateActionPerformed(evt);
            }
        });

        cmbBox_SelectUpdateType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Add value to WLD", "Set value to WLD" }));

        btn_ShowPlayerInfo.setText("Show player Info");
        btn_ShowPlayerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ShowPlayerInfoActionPerformed(evt);
            }
        });

        CmbBox_SelectViewPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbBox_SelectViewPlayerActionPerformed(evt);
            }
        });

        chkBox_ShowPlayerGames.setText("Display Player Games");
        chkBox_ShowPlayerGames.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel1.setText("   Player Stats");

        btn_ReturnToMainPlayerStats.setText("Return to Main");
        btn_ReturnToMainPlayerStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ReturnToMainPlayerStatsActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(117, 117, 117));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javadevclassobj/Cool3DBoardGraphic.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(117, 117, 117));

        jLabel3.setBackground(new java.awt.Color(117, 117, 117));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javadevclassobj/BethHarmenPixelArt.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkBox_ShowPlayerGames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CmbBox_SelectViewPlayer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_ShowPlayerInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_StatsUpdate)
                            .addComponent(cmbBox_SelectUpdateType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_ReturnToMainPlayerStats, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_UpdatePlayerWLD, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ShowPlayerInfo)
                    .addComponent(btn_UpdatePlayerWLD))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CmbBox_SelectViewPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbBox_SelectUpdateType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkBox_ShowPlayerGames)
                    .addComponent(txt_StatsUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_ReturnToMainPlayerStats)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_StatsUpdateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txt_StatsUpdateActionPerformed
    {//GEN-HEADEREND:event_txt_StatsUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_StatsUpdateActionPerformed

    private void btn_ShowPlayerInfoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btn_ShowPlayerInfoActionPerformed
    {//GEN-HEADEREND:event_btn_ShowPlayerInfoActionPerformed
        // Gets player Id as it will line up to where they are in the 
        //index of the player in combo box
        int PID = CmbBox_SelectViewPlayer.getSelectedIndex(); 
        //Outputs the Player Data to string into the textpane
        textPane_PlayerData.setText(PData.get(PID).PlayerDataToString()); 
        //sets selected to the the Pdata of the selected ID
        selected = PData.get(PID);
    }//GEN-LAST:event_btn_ShowPlayerInfoActionPerformed

    private void CmbBox_SelectViewPlayerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CmbBox_SelectViewPlayerActionPerformed
    {//GEN-HEADEREND:event_CmbBox_SelectViewPlayerActionPerformed
       
    }//GEN-LAST:event_CmbBox_SelectViewPlayerActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // declares the boolean addedPlayer to false, 
        //used to make sure that Program dosent double add
        boolean addedPlayers = false; 
        //checks if added player is still false
        //before adding players to combo box
        if (addedPlayers == false) 
        {
            //for loop that loops the extent of PData
            for (int i = 0; i < PData.size(); i++) 
            {
                // gets playerData at position i
                PlayerData p = PData.get(i); 
                //adds the playerData at position i's name into the combo box
                CmbBox_SelectViewPlayer.addItem(p.getPlayerName()); 
                
            }
            //declares the variable added player to true
            //therefore wont input again the combo box
            addedPlayers = true; 
        }
    }//GEN-LAST:event_formWindowActivated

    private void btn_UpdatePlayerWLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdatePlayerWLDActionPerformed
       //Reading in Player Win Loss draw from text field, to be split below
        String PWLD = txt_StatsUpdate.getText(); 
         //Splitter that is going to be used to split wins loss and draws
         //based on location of "-"
        Scanner Splitter = new Scanner(PWLD).useDelimiter("-");
         //Declaring wins eqaul to the splitter next Attribute
        String PWins = Splitter.next();
         //Declaring losses eqaul to the splitter next Attribute
        String PLosses = Splitter.next();
        //Declaring Draws eqaul to the splitter next Attribute
        String PDraws = Splitter.next(); 
        //Used to determine if there is a error within the program
        boolean error = false;
        
        
        int PlayerWins = 0; //Used to store wins if it is entered as a int
        int PlayerLosses = 0; //Used to store Losses if it is entered as a int
        int PlayerDraws = 0; //Used to store Draws if it is entered as a int
        
        //Tries to convert the Player wins String to a integer. 
        //Otherwise catches the error
        try 
        {
            PlayerWins = Integer.parseInt(PWins);            
        }
        //catches a number format exception error when cannot Integer.parseInt()
        catch (NumberFormatException nfe) 
        {
            error = true; //sets variable error to true
        }
        //Tries to convert the Player Losses String to a integer. 
        //Otherwise catches the error
        try  
        {
            PlayerLosses = Integer.parseInt(PLosses);            
        }
        //catches a number format exception error when cannot Integer.parseInt()
        catch (NumberFormatException nfe) 
        {
            error = true; //sets variable error to true
        }
         //Tries to convert the Player Draws String to a integer. 
         //Otherwise catches the error
        try
        {
            PlayerDraws = Integer.parseInt(PDraws);            
        }
        //catches a number format exception error when cannot Integer.parseInt()
        catch (NumberFormatException nfe) 
        {
            error = true; //sets variable error to true
            
        }
        
        if (error) 
        {
            //outputs an error and will let user know by JOptionPane
            JOptionPane.showMessageDialog(null, "Incorrect Format for Wins loss's and draws \nShould be in format W-L-D");
        }
        
        //Checks to see which combo box option is selected 
        //in this case it is to Add values to WLD 
        if (cmbBox_SelectUpdateType.getSelectedIndex()== 0) 
        {
                //Creates a new Player object to be sent to the DB
                PlayerData NewPlayer = new PlayerData(selected.getPlayerName(), selected.getPDOB(), selected.getPWins() + PlayerWins, selected.getPLosses()+ PlayerLosses,selected.getPDraws()+ PlayerDraws);
                //Sends the new Player to the DB Manager
                db.addPlayer(NewPlayer);
                db.deletePlayer(selected.getPlayerID());
        }
        //Checks to see which combo box option is selected 
        //in this case it is to set WLD to values
        else if (cmbBox_SelectUpdateType.getSelectedIndex()== 1)
        {
            PlayerData NewPlayer = new PlayerData(selected.getPlayerName(), selected.getPDOB(), PlayerWins, PlayerLosses,PlayerDraws);
                //Sends the new Player to the DB Manager
                db.addPlayer(NewPlayer);
                db.deletePlayer(selected.getPlayerID());
        }
        new PlayerStats().setVisible(true); //Opens the selected JFrame
        this.dispose(); //Closes the current JFrame
        
        
    }//GEN-LAST:event_btn_UpdatePlayerWLDActionPerformed

    private void btn_ReturnToMainPlayerStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ReturnToMainPlayerStatsActionPerformed
        //creates a new instance of the selected form, 
        //in this case the home screen
        new HomeScreen().setVisible(true); 
        this.dispose(); //Disposes/closes the form that is currently open
    }//GEN-LAST:event_btn_ReturnToMainPlayerStatsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerStats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerStats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerStats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerStats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()//runs the frame
            {
                new PlayerStats().setVisible(true); //sets the frame to visible
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbBox_SelectViewPlayer;
    private javax.swing.JButton btn_ReturnToMainPlayerStats;
    private javax.swing.JButton btn_ShowPlayerInfo;
    private javax.swing.JButton btn_UpdatePlayerWLD;
    private javax.swing.JCheckBox chkBox_ShowPlayerGames;
    private javax.swing.JComboBox<String> cmbBox_SelectUpdateType;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane textPane_PlayerData;
    private javax.swing.JTextField txt_StatsUpdate;
    // End of variables declaration//GEN-END:variables
}
